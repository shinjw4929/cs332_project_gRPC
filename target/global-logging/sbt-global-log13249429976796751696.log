[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sjw49\AppData\Local\Temp\idea310.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sjw49\AppData\Local\Temp\idea310.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (IBM Corporation Java 11.0.24)
[debug] Load.defaultLoad until apply took 38.1258ms
[debug]           Load.loadUnit: plugins took 35.1104ms
[debug]           Load.loadUnit: defsScala took 0.2055ms
[debug] [Loading] Scanning directory C:\Users\sjw49\IdeaProjects\grpc_final\project
[debug]             Load.loadUnit: mkEval took 2.4856ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\grpc_final\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.3498 ms
[info] loading settings for project grpc_final-build from scalapb.sbt,idea310.sbt ...
[debug]               Load.resolveProject(grpc_final-build) took 30.5662ms
[debug]             Load.loadTransitive: finalizeProject(Project(id grpc_final-build, base: C:\Users\sjw49\IdeaProjects\grpc_final\project, plugins: List(<none>))) took 41.241ms
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\grpc_final\project, returning: (grpc_final-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1553.6825ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.9535ms
[debug]         Load.loadUnit(file:/C:/Users/sjw49/IdeaProjects/grpc_final/project/, ...) took 1604.5058ms
[debug]       Load.apply: load took 1678.6425ms
[debug]       Load.apply: resolveProjects took 2.2902ms
[debug]       Load.apply: finalTransforms took 41.1853ms
[debug]       Load.apply: config.delegates took 2.5777ms
[debug]       Load.apply: Def.make(settings)... took 364.2555ms
[debug]       Load.apply: structureIndex took 73.1681ms
[debug]       Load.apply: mkStreams took 0.8316ms
[info] loading project definition from C:\Users\sjw49\IdeaProjects\grpc_final\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3778.4966ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\sjw49\IdeaProjects\grpc_final
[debug]       Load.loadUnit: mkEval took 0.1933ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtprotoc.ProtocPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.425 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 17.1374ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sjw49\IdeaProjects\grpc_final, plugins: List(<none>))) took 19.8219ms
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\grpc_final, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1176.7103ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.3954ms
[debug]   Load.loadUnit(file:/C:/Users/sjw49/IdeaProjects/grpc_final/, ...) took 4960.3689ms
[debug] Load.apply: load took 4972.3013ms
[debug] Load.apply: resolveProjects took 0.0585ms
[debug] Load.apply: finalTransforms took 26.12ms
[debug] Load.apply: config.delegates took 0.2153ms
[debug] Load.apply: Def.make(settings)... took 70.0948ms
[debug] Load.apply: structureIndex took 19.9482ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to grpc_final (in build file:/C:/Users/sjw49/IdeaProjects/grpc_final/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
