[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (IBM Corporation Java 11.0.24)
[debug] Load.defaultLoad until apply took 77.0251ms
[debug]           Load.loadUnit: plugins took 65.638ms
[debug]           Load.loadUnit: defsScala took 0.1949ms
[debug] [Loading] Scanning directory C:\Users\sjw49\IdeaProjects\sortNpartition\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\sortNpartition\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.6639 ms
[debug]               Load.resolveProject(sortnpartition-build) took 22.7167ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sortnpartition-build, base: C:\Users\sjw49\IdeaProjects\sortNpartition\project, plugins: List(<none>))) took 41.9984ms
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\sortNpartition\project, returning: (sortnpartition-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 58.2548ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.1328ms
[debug]         Load.loadUnit(file:/C:/Users/sjw49/IdeaProjects/sortNpartition/project/, ...) took 141.2546ms
[debug]       Load.apply: load took 266.7809ms
[debug]       Load.apply: resolveProjects took 6.037ms
[debug]       Load.apply: finalTransforms took 60.4677ms
[debug]       Load.apply: config.delegates took 3.1402ms
[debug]       Load.apply: Def.make(settings)... took 540.1858ms
[debug]       Load.apply: structureIndex took 110.4691ms
[debug]       Load.apply: mkStreams took 1.8658ms
[info] loading project definition from C:\Users\sjw49\IdeaProjects\sortNpartition\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1908.1762ms
[debug]     Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory C:\Users\sjw49\IdeaProjects\sortNpartition
[debug]       Load.loadUnit: mkEval took 3.0031ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0547 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.3969ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sjw49\IdeaProjects\sortNpartition, plugins: List(<none>))) took 6.2857ms
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\sortNpartition, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 124.8151ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.974ms
[debug]   Load.loadUnit(file:/C:/Users/sjw49/IdeaProjects/sortNpartition/, ...) took 2039.2466ms
[debug] Load.apply: load took 2067.22ms
[debug] Load.apply: resolveProjects took 0.143ms
[debug] Load.apply: finalTransforms took 16.4756ms
[debug] Load.apply: config.delegates took 0.4439ms
[debug] Load.apply: Def.make(settings)... took 90.5524ms
[debug] Load.apply: structureIndex took 22.6037ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to sortNpartition (in build file:/C:/Users/sjw49/IdeaProjects/sortNpartition/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-bca8f2e9005287cf7d1c
[debug] Writing bsp connection file
[info] started sbt server
