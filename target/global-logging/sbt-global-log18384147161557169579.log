[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sjw49\AppData\Local\Temp\idea4.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sjw49\AppData\Local\Temp\idea4.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (IBM Corporation Java 11.0.24)
[debug] Load.defaultLoad until apply took 88.7177ms
[debug]           Load.loadUnit: plugins took 38.2174ms
[debug]           Load.loadUnit: defsScala took 0.1294ms
[debug] [Loading] Scanning directory C:\Users\sjw49\IdeaProjects\grpc_file_test\project
[debug]             Load.loadUnit: mkEval took 2.3263ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\grpc_file_test\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.4141 ms
[info] loading settings for project grpc_file_test-build from scalapb.sbt,idea4.sbt ...
[debug]               Load.resolveProject(grpc_file_test-build) took 22.0298ms
[debug]             Load.loadTransitive: finalizeProject(Project(id grpc_file_test-build, base: C:\Users\sjw49\IdeaProjects\grpc_file_test\project, plugins: List(<none>))) took 43.3869ms
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\grpc_file_test\project, returning: (grpc_file_test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 196.7403ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3717ms
[debug]         Load.loadUnit(file:/C:/Users/sjw49/IdeaProjects/grpc_file_test/project/, ...) took 241.9284ms
[debug]       Load.apply: load took 338.3241ms
[debug]       Load.apply: resolveProjects took 2.2754ms
[debug]       Load.apply: finalTransforms took 47.2237ms
[debug]       Load.apply: config.delegates took 4.4072ms
[debug]       Load.apply: Def.make(settings)... took 477.9877ms
[debug]       Load.apply: structureIndex took 108.103ms
[debug]       Load.apply: mkStreams took 1.9904ms
[info] loading project definition from C:\Users\sjw49\IdeaProjects\grpc_file_test\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1876.5157ms
[debug]     Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\sjw49\IdeaProjects\grpc_file_test
[debug]       Load.loadUnit: mkEval took 0.1713ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtprotoc.ProtocPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.716 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 25.2828ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sjw49\IdeaProjects\grpc_file_test, plugins: List(<none>))) took 27.6681ms
[debug] [Loading] Done in C:\Users\sjw49\IdeaProjects\grpc_file_test, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2341.3665ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.864ms
[debug]   Load.loadUnit(file:/C:/Users/sjw49/IdeaProjects/grpc_file_test/, ...) took 4225.7715ms
[debug] Load.apply: load took 4239.9094ms
[debug] Load.apply: resolveProjects took 0.081ms
[debug] Load.apply: finalTransforms took 40.2384ms
[debug] Load.apply: config.delegates took 0.3208ms
[debug] Load.apply: Def.make(settings)... took 83.636ms
[debug] Load.apply: structureIndex took 17.8604ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to grpc_file_test (in build file:/C:/Users/sjw49/IdeaProjects/grpc_file_test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
